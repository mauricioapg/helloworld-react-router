{"ast":null,"code":"var _jsxFileName = \"/Users/mauriciogabriel/Documents/personal-projects/hello-world/src/pages/Post/index.js\",\n  _s = $RefreshSig$();\nimport './Post.css';\nimport { Route, Routes, useParams } from \"react-router-dom\";\nimport posts from 'json/posts.json';\nimport ModelPost from \"components/ModelPost\";\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\nimport PageNotFound from 'pages/PageNotFound';\nimport DefaultPage from 'components/DefaultPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const params = useParams();\n  const post = posts.find(post => {\n    return post.id === Number(params.id);\n  });\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n\n  // const postsFiltered = [\n  //     posts.slice(2, 6)\n  // ]\n\n  const embaralhar = () => {\n    const teste = ['A', 'B', 'C', 'D'];\n    teste.sort();\n  };\n  console.log(teste);\n\n  // console.log('ARRAY EMBARALHADO: ' + posts.slice(0, 4))\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(DefaultPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 38\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(ModelPost, {\n          image: `/assets/posts/${post.id}/capa.png`,\n          title: post.titulo,\n          load: teste.sort,\n          posts: posts\n          // posts.slice(0, 4).sort()\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-markdown-container\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: post.texto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["Route","Routes","useParams","posts","ModelPost","ReactMarkdown","PageNotFound","DefaultPage","Post","params","post","find","id","Number","embaralhar","teste","sort","console","log","titulo","texto"],"sources":["/Users/mauriciogabriel/Documents/personal-projects/hello-world/src/pages/Post/index.js"],"sourcesContent":["import './Post.css'\nimport { Route, Routes, useParams } from \"react-router-dom\"\nimport posts from 'json/posts.json'\nimport ModelPost from \"components/ModelPost\"\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\"\nimport PageNotFound from 'pages/PageNotFound'\nimport DefaultPage from 'components/DefaultPage'\n\nconst Post = () => {\n\n    const params = useParams()\n\n    const post = posts.find((post) => {\n        return post.id === Number(params.id)\n    })\n\n    if (!post) {\n        return <PageNotFound />\n    }\n\n    // const postsFiltered = [\n    //     posts.slice(2, 6)\n    // ]\n\n    \n    const embaralhar = () => {\n        const teste = ['A', 'B', 'C', 'D']\n        teste.sort()  \n    }\n    console.log(teste)\n\n    // console.log('ARRAY EMBARALHADO: ' + posts.slice(0, 4))\n\n    return (\n        <Routes>\n            <Route path='*' element={<DefaultPage />}>\n                <Route index element={\n                    <ModelPost\n                        image={`/assets/posts/${post.id}/capa.png`}\n                        title={post.titulo}\n                        load={teste.sort}\n                        posts={\n                            posts\n                            // posts.slice(0, 4).sort()\n                        }>\n                        <div className='post-markdown-container'>\n                            <ReactMarkdown>\n                                {post.texto}\n                            </ReactMarkdown>\n                        </div>\n                    </ModelPost>}>\n                </Route>\n            </Route>\n        </Routes>\n    )\n}\n\nexport default Post"],"mappings":";;AAAA,OAAO,YAAY;AACnB,SAASA,KAAK,EAAEC,MAAM,EAAEC,SAAS,QAAQ,kBAAkB;AAC3D,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,aAAa,QAAQ,mCAAmC;AACjE,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,WAAW,MAAM,wBAAwB;AAAA;AAEhD,MAAMC,IAAI,GAAG,MAAM;EAAA;EAEf,MAAMC,MAAM,GAAGP,SAAS,EAAE;EAE1B,MAAMQ,IAAI,GAAGP,KAAK,CAACQ,IAAI,CAAED,IAAI,IAAK;IAC9B,OAAOA,IAAI,CAACE,EAAE,KAAKC,MAAM,CAACJ,MAAM,CAACG,EAAE,CAAC;EACxC,CAAC,CAAC;EAEF,IAAI,CAACF,IAAI,EAAE;IACP,oBAAO,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAC3B;;EAEA;EACA;EACA;;EAGA,MAAMI,UAAU,GAAG,MAAM;IACrB,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAClCA,KAAK,CAACC,IAAI,EAAE;EAChB,CAAC;EACDC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;;EAElB;;EAEA,oBACI,QAAC,MAAM;IAAA,uBACH,QAAC,KAAK;MAAC,IAAI,EAAC,GAAG;MAAC,OAAO,eAAE,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA,QAAI;MAAA,uBACrC,QAAC,KAAK;QAAC,KAAK;QAAC,OAAO,eAChB,QAAC,SAAS;UACN,KAAK,EAAG,iBAAgBL,IAAI,CAACE,EAAG,WAAW;UAC3C,KAAK,EAAEF,IAAI,CAACS,MAAO;UACnB,IAAI,EAAEJ,KAAK,CAACC,IAAK;UACjB,KAAK,EACDb;UACA;UACH;UAAA,uBACD;YAAK,SAAS,EAAC,yBAAyB;YAAA,uBACpC,QAAC,aAAa;cAAA,UACTO,IAAI,CAACU;YAAK;cAAA;cAAA;cAAA;YAAA;UACC;YAAA;YAAA;YAAA;UAAA;QACd;UAAA;UAAA;UAAA;QAAA;MACG;QAAA;QAAA;QAAA;MAAA;IACT;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACH;AAEjB,CAAC;AAAA,GA/CKZ,IAAI;EAAA,QAESN,SAAS;AAAA;AAAA,KAFtBM,IAAI;AAiDV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}